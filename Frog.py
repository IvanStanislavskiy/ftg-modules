from .. import loader, utils
from telethon import events
from asyncio import sleep

class FrogMod(loader.Module):
    """–ö–ª–æ—É–Ω –ø–æ–Ω."""
    strings = {'name': 'Kjabik'}

    async def watcher(self, message, event):
        try:
            me = await message.client.get_me()
            name = me.first_name

            if message.chat_id in {-1001363387233}:
                if message.sender_id in {1124824021}:
                    if "–ô–æ—É" in message.message:
                        chat = message.chat_id
                        async with message.client.conversation(chat) as conv:
                            try:
                                response = conv.wait_event(
                                    events.NewMessage(
                                        incoming=True,
                                        from_users=message.sender_id,
                                        chats=message.chat_id,))
                                await sleep(20)
                                await message.client.send_message(chat, '–∂–∞–±–∞ –∏–Ω—Ñ–æ')
                                response = await response

                                if "üç≠:–ú–æ–∂–Ω–æ –ø–æ–∫–æ—Ä–º–∏—Ç—å" in response.text:
                                    args = [int(x) for x in response.text.split() if x.isnumeric()]
                                    randelta = random.randint(20, 60)
                                    if len(args) == 4: delta = timedelta(hours=args[0], minutes=args[1], seconds=randelta)

                                if "üèÉ‚Äç‚ôÇÔ∏è:–ú–æ–∂–Ω–æ –∑–∞–±—Ä–∞—Ç—å" in response.text:
                                    await sleep(10)
                                    await message.respond('–∑–∞–≤–µ—Ä—à–∏—Ç—å —Ä–∞–±–æ—Ç—É')
                                    if "‚ò†Ô∏è:–ú–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å—Å—è" in response.text:
                                        await sleep(10)
                                        await message.respond('—Ä–µ–∞–Ω–∏–º–∏—Ä–æ–≤–∞—Ç—å –∂–∞–±—É')
                                        await sleep(10)
                                        await message.respond('–æ—Ç–ø—Ä–∞–≤–∏—Ç—å—Å—è –≤ –∑–æ–ª–æ—Ç–æ–µ –ø–æ–¥–∑–µ–º–µ–ª—å–µ')
                                elif "üèÉ‚Äç‚ôÇÔ∏è:–û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–∞ —Ä–∞–±–æ—Ç—É" in response.text:
                                    if "‚ò†Ô∏è:–ú–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å—Å—è" in response.text:
                                        await sleep(10)
                                        await message.respond('—Ä–µ–∞–Ω–∏–º–∏—Ä–æ–≤–∞—Ç—å –∂–∞–±—É')
                                        await sleep(10)
                                        await message.respond('–æ—Ç–ø—Ä–∞–≤–∏—Ç—å—Å—è –≤ –∑–æ–ª–æ—Ç–æ–µ –ø–æ–¥–∑–µ–º–µ–ª—å–µ')
                                elif "üèÉ‚Äç‚ôÇÔ∏è:–ñ–∞–±—É –º–æ–∂–Ω–æ" in response.text:
                                    if "‚ò†Ô∏è:–ú–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å—Å—è" in response.text:
                                        await sleep(10)
                                        await message.respond('—Ä–µ–∞–Ω–∏–º–∏—Ä–æ–≤–∞—Ç—å –∂–∞–±—É')
                                        await sleep(10)
                                        await message.respond('–æ—Ç–ø—Ä–∞–≤–∏—Ç—å—Å—è –≤ –∑–æ–ª–æ—Ç–æ–µ –ø–æ–¥–∑–µ–º–µ–ª—å–µ')
                                    elif ("‚ò†Ô∏è:–í –ø–æ–¥–∑–µ–º–µ–ª—å–µ –º–æ–∂–Ω–æ —á–µ—Ä–µ–∑ 2—á" in response.text):
                                        await sleep(10)
                                        await message.respond('—Ä–µ–∞–Ω–∏–º–∏—Ä–æ–≤–∞—Ç—å –∂–∞–±—É')
                                        await sleep(10)
                                        await message.respond('—Ä–∞–±–æ—Ç–∞ –≥—Ä–∞–±–∏—Ç–µ–ª—å')
                            except:
                                pass
